<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Career Transition Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .container { display: flex; flex-direction: column; align-items: center; }
        input { margin-bottom: 10px; padding: 8px; width: 300px; }
        .role-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; margin-top: 20px; }
        .role-card { border: 1px solid #ddd; padding: 15px; border-radius: 8px; cursor: pointer; transition: 0.3s; }
        .role-card:hover { background-color: #f5f5f5; }
        .details { display: none; margin-top: 10px; font-size: 14px; }
        .chart-container { width: 80%; margin: 20px auto; }
        .pathway-container { width: 90%; margin-top: 30px; }
        .skill-matrix { display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px; text-align: center; margin-top: 20px; }
        .skill-box { padding: 10px; background: #ddd; border-radius: 5px; transition: 0.3s; }
        .skill-box:hover { background: #bbb; }
    </style>
</head>
<body>

<div class="container">
    <h2>AI Career Transition Dashboard</h2>
    <input type="text" id="search" placeholder="Search roles..." onkeyup="filterRoles()">

    <div class="role-grid" id="roleGrid">
        <!-- Role cards will be injected here -->
    </div>

    <h3>AI Impact Comparison</h3>
    <div class="chart-container">
        <canvas id="impactChart"></canvas>
    </div>

    <h3>Career Pathway Visualization</h3>
    <svg class="pathway-container" id="careerPathway" width="600" height="300"></svg>

    <h3>Skill Transfer Matrix</h3>
    <div class="skill-matrix" id="skillMatrix">
        <!-- Skill boxes will be injected here -->
    </div>
</div>

<script>
    // Sample Data (Replace with CSV data)
    const roles = [
        { role: "QA Engineer", future: "AI Testing Specialist", impact: 63, skills: ["Selenium", "JUnit", "AI Test Automation"] },
        { role: "Frontend Developer", future: "AI UI Engineer", impact: 57, skills: ["JavaScript", "React", "AI UI Tools"] },
        { role: "Data Engineer", future: "AI Data Architect", impact: 54, skills: ["SQL", "Hadoop", "AI Data Tools"] },
        { role: "Data Scientist", future: "AI Insight Engineer", impact: 52, skills: ["Python", "TensorFlow", "AutoML"] }
    ];

    // Generate Role Cards
    function generateRoleCards() {
        const grid = document.getElementById("roleGrid");
        grid.innerHTML = "";
        roles.forEach((r, index) => {
            const card = document.createElement("div");
            card.classList.add("role-card");
            card.innerHTML = `<strong>${r.role}</strong> â†’ <em>${r.future}</em>
                <div class="details">
                    <p><b>Impact:</b> ${r.impact}% AI Automation</p>
                    <p><b>New Skills:</b> ${r.skills.join(", ")}</p>
                </div>`;
            card.onclick = () => card.querySelector(".details").style.display = 
                card.querySelector(".details").style.display === "block" ? "none" : "block";
            grid.appendChild(card);
        });
    }

    // Search Functionality
    function filterRoles() {
        const query = document.getElementById("search").value.toLowerCase();
        document.querySelectorAll(".role-card").forEach(card => {
            card.style.display = card.innerText.toLowerCase().includes(query) ? "block" : "none";
        });
    }

    // Generate AI Impact Bar Chart
    function generateImpactChart() {
        const ctx = document.getElementById("impactChart").getContext("2d");
        new Chart(ctx, {
            type: "bar",
            data: {
                labels: roles.map(r => r.role),
                datasets: [{
                    label: "AI Impact (%)",
                    data: roles.map(r => r.impact),
                    backgroundColor: ["#ff6384", "#36a2eb", "#ffcd56", "#4bc0c0"]
                }]
            }
        });
    }

    // Generate Career Pathway Visualization
    function generateCareerPathway() {
        const svg = d3.select("#careerPathway");
        const rolePairs = roles.map((r, i) => ({ x1: 100, y1: (i+1) * 50, x2: 500, y2: (i+1) * 50 }));

        svg.selectAll("line")
            .data(rolePairs)
            .enter()
            .append("line")
            .attr("x1", d => d.x1)
            .attr("y1", d => d.y1)
            .attr("x2", d => d.x2)
            .attr("y2", d => d.y2)
            .attr("stroke", "black")
            .attr("stroke-width", 2);

        svg.selectAll("text")
            .data(roles)
            .enter()
            .append("text")
            .attr("x", 20)
            .attr("y", (d, i) => (i+1) * 50)
            .text(d => d.role);

        svg.selectAll("text.future")
            .data(roles)
            .enter()
            .append("text")
            .attr("x", 520)
            .attr("y", (d, i) => (i+1) * 50)
            .text(d => d.future);
    }

    // Generate Skill Matrix
    function generateSkillMatrix() {
        const matrix = document.getElementById("skillMatrix");
        matrix.innerHTML = "";
        roles.forEach(r => {
            r.skills.forEach(skill => {
                const box = document.createElement("div");
                box.classList.add("skill-box");
                box.innerText = skill;
                matrix.appendChild(box);
            });
        });
    }

    // Initialize Dashboard
    generateRoleCards();
    generateImpactChart();
    generateCareerPathway();
    generateSkillMatrix();
</script>

</body>
</html>
